version: '3.9'

services:
  postgresql:
    image: registry.gitlab.iitsp.com/allworldit/docker/postgresql/v3.17:latest
    environment:
      - "POSTGRES_ROOT_PASSWORD=xxxx"
      - "POSTGRES_USER=mastodon"
      - "POSTGRES_PASSWORD=xxxx"
      - "POSTGRES_DATABASE=mastodon"
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data
      # Backups
      - ./config/scripts/backup:/root/backup
      - ./data/backups:/root/backups
    networks:
      - internal


  redis:
    image: registry.gitlab.iitsp.com/allworldit/docker/redis/v3.17:latest
    environment:
      - "REDIS_PASSWORD=xxxx"
    volumes:
      - ./data/redis:/var/lib/redis
    networks:
      - internal


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.3
    environment:
      - "ELASTIC_PASSWORD=xxxx"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m -Des.enforce.bootstrap.checks=true"
      - "xpack.license.self_generated.type=basic"
      - "xpack.security.enabled=false"
      - "xpack.watcher.enabled=false"
      - "xpack.graph.enabled=false"
      - "xpack.ml.enabled=false"
      - "bootstrap.memory_lock=true"
      - "cluster.name=es-mastodon"
      - "discovery.type=single-node"
      - "thread_pool.write.queue_size=1000"
    volumes:
       - ./data/elasticsearch:/usr/share/elasticsearch/data
    networks:
       - external
       - internal
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536


  mastodon:
    image: registry.gitlab.iitsp.com/allworldit/docker/mastodon:latest
    environment:
      - "MASTODON_MODE=web"
    volumes:
      - ./config/mastodon.env:/etc/mastodon/mastodon.env:ro
      - ./data/mastodon:/mastodon/public/system
      - ./data/mastodon.private:/mastodon/private
    ports:
      - '8082:3000'
    networks:
      - external
      - internal
    depends_on:
      - postgresql
      - redis
      - elasticsearch


  mastodon-streaming:
    image: registry.gitlab.iitsp.com/allworldit/docker/mastodon:latest
    environment:
      - "MASTODON_MODE=streaming"
    volumes:
      - ./config/mastodon.env:/etc/mastodon/mastodon.env:ro
    ports:
      - '8083:4000'
    networks:
      - external
      - internal
    depends_on:
      - postgresql
      - redis


  mastodon-sidekiq:
    image: registry.gitlab.iitsp.com/allworldit/docker/mastodon:latest
    environment:
      - "MASTODON_MODE=sidekiq"
    volumes:
      - ./config/mastodon.env:/etc/mastodon/mastodon.env:ro
      - ./data/mastodon:/mastodon/public/system
    networks:
      - external
      - internal
    depends_on:
      - postgresql
      - redis


  nginx-media:
    image: registry.gitlab.iitsp.com/allworldit/docker/nginx/v3.17:latest
    restart: always
    networks:
      - external
    ports:
      - '8084:80'
    volumes:
      - ./config/nginx-proxy.conf:/etc/nginx/conf.d/default.conf:ro
      # Map a new cache directory, notice the s3_cache!
      - ./data/nginx-media:/var/lib/nginx/s3_cache
      # We need a index.html file so the health check works
      - ./data/nginx-media-root:/var/www/html:ro


networks:
  external:
  internal:
    internal: true
